name: Build and deploy ASP.Net Core app to Azure Web App - EbenezerAPIWIN

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore EbenezerConnectApi/EbenezerConnectApi.csproj

      - name: Build project
        run: dotnet build EbenezerConnectApi/EbenezerConnectApi.csproj --configuration Release --no-restore

      - name: Publish project
        run: dotnet publish EbenezerConnectApi/EbenezerConnectApi.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp --no-build

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_081FF8C3021040889E0BDD9AEB976620 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_67F5F077F5F64A78BE73BA190A9E3205 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C39E8AFB88A64DEF8A21071F03ED1BFA }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'EbenezerAPIWIN'
          slot-name: 'Production'
          package: .
